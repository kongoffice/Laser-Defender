using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_General : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_General(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_General(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5033057752812805597,6501790984039646337));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Name
	{
		get
		{
			return _Name[Index];
		}
		set
		{
			_Name[Index] = value;
		}
	}
	public System.String Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5200394703058699942,5807765251162682273));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Name;
	public static BansheeGz.BGDatabase.BGFieldString _Name
	{
		get
		{
			if(_ufle12jhs77_Name==null || _ufle12jhs77_Name.IsDeleted) _ufle12jhs77_Name=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5080954793424731471,14907295612307905155));
			return _ufle12jhs77_Name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldString _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4895618618559419384,6977720910322627772));
			return _ufle12jhs77_Value;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_General() : base(MetaDefault)
	{
	}
	private DB_General(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_General(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_General(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_General FindEntity(Predicate<DB_General> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_General) entity)) as DB_General;
	}
	public static List<DB_General> FindEntities(Predicate<DB_General> filter, List<DB_General> result=null, Comparison<DB_General> sort=null)
	{
		result = result ?? new List<DB_General>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_General) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_General) e1, (DB_General) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_General) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_General> action, Predicate<DB_General> filter=null, Comparison<DB_General> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_General) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_General) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_General)e1,(DB_General)e2));
	}
	public static DB_General GetEntity(BGId entityId)
	{
		return (DB_General) MetaDefault.GetEntity(entityId);
	}
	public static DB_General GetEntity(int index)
	{
		return (DB_General) MetaDefault[index];
	}
	public static DB_General GetEntity(string entityName)
	{
		return (DB_General) MetaDefault.GetEntity(entityName);
	}
	public static DB_General NewEntity()
	{
		return (DB_General) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Language : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Language(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Language(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4971458878996820377,6018456447831788946));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Language
	{
		get
		{
			return _Language[Index];
		}
		set
		{
			_Language[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4631761300566090688,925235198337617343));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Language;
	public static BansheeGz.BGDatabase.BGFieldString _Language
	{
		get
		{
			if(_ufle12jhs77_Language==null || _ufle12jhs77_Language.IsDeleted) _ufle12jhs77_Language=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5094291148714323459,5058398219490259094));
			return _ufle12jhs77_Language;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Language() : base(MetaDefault)
	{
	}
	private DB_Language(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Language(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Language(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Language FindEntity(Predicate<DB_Language> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Language) entity)) as DB_Language;
	}
	public static List<DB_Language> FindEntities(Predicate<DB_Language> filter, List<DB_Language> result=null, Comparison<DB_Language> sort=null)
	{
		result = result ?? new List<DB_Language>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Language) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Language) e1, (DB_Language) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Language) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Language> action, Predicate<DB_Language> filter=null, Comparison<DB_Language> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Language) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Language) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Language)e1,(DB_Language)e2));
	}
	public static DB_Language GetEntity(BGId entityId)
	{
		return (DB_Language) MetaDefault.GetEntity(entityId);
	}
	public static DB_Language GetEntity(int index)
	{
		return (DB_Language) MetaDefault[index];
	}
	public static DB_Language GetEntity(string entityName)
	{
		return (DB_Language) MetaDefault.GetEntity(entityName);
	}
	public static DB_Language NewEntity()
	{
		return (DB_Language) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Enemy : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Enemy(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Enemy(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4794330575907651024,1172130616815813262));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Id
	{
		get
		{
			return _Id[Index];
		}
		set
		{
			_Id[Index] = value;
		}
	}
	public System.Int32 Hp
	{
		get
		{
			return _Hp[Index];
		}
		set
		{
			_Hp[Index] = value;
		}
	}
	public System.Single Dmg
	{
		get
		{
			return _Dmg[Index];
		}
		set
		{
			_Dmg[Index] = value;
		}
	}
	public System.Single SpeedMove
	{
		get
		{
			return _SpeedMove[Index];
		}
		set
		{
			_SpeedMove[Index] = value;
		}
	}
	public System.Single BodyDmg
	{
		get
		{
			return _BodyDmg[Index];
		}
		set
		{
			_BodyDmg[Index] = value;
		}
	}
	public System.Single RangeAttack
	{
		get
		{
			return _RangeAttack[Index];
		}
		set
		{
			_RangeAttack[Index] = value;
		}
	}
	public System.Single DelayAttack
	{
		get
		{
			return _DelayAttack[Index];
		}
		set
		{
			_DelayAttack[Index] = value;
		}
	}
	public System.Int32 Capacity
	{
		get
		{
			return _Capacity[Index];
		}
		set
		{
			_Capacity[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4645607067437487462,9137586831074407596));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldInt _Id
	{
		get
		{
			if(_ufle12jhs77_Id==null || _ufle12jhs77_Id.IsDeleted) _ufle12jhs77_Id=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4905163306489562985,5616790258055969207));
			return _ufle12jhs77_Id;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Hp;
	public static BansheeGz.BGDatabase.BGFieldInt _Hp
	{
		get
		{
			if(_ufle12jhs77_Hp==null || _ufle12jhs77_Hp.IsDeleted) _ufle12jhs77_Hp=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5099582898015456556,11712743299347216268));
			return _ufle12jhs77_Hp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Dmg;
	public static BansheeGz.BGDatabase.BGFieldFloat _Dmg
	{
		get
		{
			if(_ufle12jhs77_Dmg==null || _ufle12jhs77_Dmg.IsDeleted) _ufle12jhs77_Dmg=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4808896244549701030,12910632095131802545));
			return _ufle12jhs77_Dmg;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_SpeedMove;
	public static BansheeGz.BGDatabase.BGFieldFloat _SpeedMove
	{
		get
		{
			if(_ufle12jhs77_SpeedMove==null || _ufle12jhs77_SpeedMove.IsDeleted) _ufle12jhs77_SpeedMove=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4721900106402606593,11700464603620644285));
			return _ufle12jhs77_SpeedMove;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_BodyDmg;
	public static BansheeGz.BGDatabase.BGFieldFloat _BodyDmg
	{
		get
		{
			if(_ufle12jhs77_BodyDmg==null || _ufle12jhs77_BodyDmg.IsDeleted) _ufle12jhs77_BodyDmg=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5182469066373119780,4858190136924321414));
			return _ufle12jhs77_BodyDmg;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RangeAttack;
	public static BansheeGz.BGDatabase.BGFieldFloat _RangeAttack
	{
		get
		{
			if(_ufle12jhs77_RangeAttack==null || _ufle12jhs77_RangeAttack.IsDeleted) _ufle12jhs77_RangeAttack=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5281764381662434952,12796676799574878874));
			return _ufle12jhs77_RangeAttack;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DelayAttack;
	public static BansheeGz.BGDatabase.BGFieldFloat _DelayAttack
	{
		get
		{
			if(_ufle12jhs77_DelayAttack==null || _ufle12jhs77_DelayAttack.IsDeleted) _ufle12jhs77_DelayAttack=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4854954341242082868,15877843838510834834));
			return _ufle12jhs77_DelayAttack;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Capacity;
	public static BansheeGz.BGDatabase.BGFieldInt _Capacity
	{
		get
		{
			if(_ufle12jhs77_Capacity==null || _ufle12jhs77_Capacity.IsDeleted) _ufle12jhs77_Capacity=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4892031595398597873,10270242503877424564));
			return _ufle12jhs77_Capacity;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Enemy() : base(MetaDefault)
	{
	}
	private DB_Enemy(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Enemy(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Enemy(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Enemy FindEntity(Predicate<DB_Enemy> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Enemy) entity)) as DB_Enemy;
	}
	public static List<DB_Enemy> FindEntities(Predicate<DB_Enemy> filter, List<DB_Enemy> result=null, Comparison<DB_Enemy> sort=null)
	{
		result = result ?? new List<DB_Enemy>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Enemy) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Enemy) e1, (DB_Enemy) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Enemy) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Enemy> action, Predicate<DB_Enemy> filter=null, Comparison<DB_Enemy> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Enemy) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Enemy) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Enemy)e1,(DB_Enemy)e2));
	}
	public static DB_Enemy GetEntity(BGId entityId)
	{
		return (DB_Enemy) MetaDefault.GetEntity(entityId);
	}
	public static DB_Enemy GetEntity(int index)
	{
		return (DB_Enemy) MetaDefault[index];
	}
	public static DB_Enemy GetEntity(string entityName)
	{
		return (DB_Enemy) MetaDefault.GetEntity(entityName);
	}
	public static DB_Enemy NewEntity()
	{
		return (DB_Enemy) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Hero : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Hero(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Hero(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5167855140955034753,1013757407578398600));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Id
	{
		get
		{
			return _Id[Index];
		}
		set
		{
			_Id[Index] = value;
		}
	}
	public System.Int32 Hp
	{
		get
		{
			return _Hp[Index];
		}
		set
		{
			_Hp[Index] = value;
		}
	}
	public System.Single Dmg
	{
		get
		{
			return _Dmg[Index];
		}
		set
		{
			_Dmg[Index] = value;
		}
	}
	public System.Single SpeedMove
	{
		get
		{
			return _SpeedMove[Index];
		}
		set
		{
			_SpeedMove[Index] = value;
		}
	}
	public System.Single RateCrit
	{
		get
		{
			return _RateCrit[Index];
		}
		set
		{
			_RateCrit[Index] = value;
		}
	}
	public System.Single DmgCrit
	{
		get
		{
			return _DmgCrit[Index];
		}
		set
		{
			_DmgCrit[Index] = value;
		}
	}
	public System.Single RotateSpeed
	{
		get
		{
			return _RotateSpeed[Index];
		}
		set
		{
			_RotateSpeed[Index] = value;
		}
	}
	public System.Int32 NumberInKnife
	{
		get
		{
			return _NumberInKnife[Index];
		}
		set
		{
			_NumberInKnife[Index] = value;
		}
	}
	public System.Int32 NumberOutKnife
	{
		get
		{
			return _NumberOutKnife[Index];
		}
		set
		{
			_NumberOutKnife[Index] = value;
		}
	}
	public System.Single MaxRotateSpeed
	{
		get
		{
			return _MaxRotateSpeed[Index];
		}
		set
		{
			_MaxRotateSpeed[Index] = value;
		}
	}
	public System.Int32 MaxNumberInKnife
	{
		get
		{
			return _MaxNumberInKnife[Index];
		}
		set
		{
			_MaxNumberInKnife[Index] = value;
		}
	}
	public System.Int32 MaxNumberOutKnife
	{
		get
		{
			return _MaxNumberOutKnife[Index];
		}
		set
		{
			_MaxNumberOutKnife[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5157013097203683450,1980575308483523491));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldInt _Id
	{
		get
		{
			if(_ufle12jhs77_Id==null || _ufle12jhs77_Id.IsDeleted) _ufle12jhs77_Id=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5607238308529870520,4244789477339485836));
			return _ufle12jhs77_Id;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Hp;
	public static BansheeGz.BGDatabase.BGFieldInt _Hp
	{
		get
		{
			if(_ufle12jhs77_Hp==null || _ufle12jhs77_Hp.IsDeleted) _ufle12jhs77_Hp=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5464169434369698150,10183780941932238775));
			return _ufle12jhs77_Hp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Dmg;
	public static BansheeGz.BGDatabase.BGFieldFloat _Dmg
	{
		get
		{
			if(_ufle12jhs77_Dmg==null || _ufle12jhs77_Dmg.IsDeleted) _ufle12jhs77_Dmg=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5270103224060517966,8926045594492670888));
			return _ufle12jhs77_Dmg;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_SpeedMove;
	public static BansheeGz.BGDatabase.BGFieldFloat _SpeedMove
	{
		get
		{
			if(_ufle12jhs77_SpeedMove==null || _ufle12jhs77_SpeedMove.IsDeleted) _ufle12jhs77_SpeedMove=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4740481683513902436,4067935424022589865));
			return _ufle12jhs77_SpeedMove;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RateCrit;
	public static BansheeGz.BGDatabase.BGFieldFloat _RateCrit
	{
		get
		{
			if(_ufle12jhs77_RateCrit==null || _ufle12jhs77_RateCrit.IsDeleted) _ufle12jhs77_RateCrit=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5242181692183121764,17406058677658018228));
			return _ufle12jhs77_RateCrit;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DmgCrit;
	public static BansheeGz.BGDatabase.BGFieldFloat _DmgCrit
	{
		get
		{
			if(_ufle12jhs77_DmgCrit==null || _ufle12jhs77_DmgCrit.IsDeleted) _ufle12jhs77_DmgCrit=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5505219486270268265,15439254815943054734));
			return _ufle12jhs77_DmgCrit;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RotateSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _RotateSpeed
	{
		get
		{
			if(_ufle12jhs77_RotateSpeed==null || _ufle12jhs77_RotateSpeed.IsDeleted) _ufle12jhs77_RotateSpeed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4938580213706277572,12736506163048114826));
			return _ufle12jhs77_RotateSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_NumberInKnife;
	public static BansheeGz.BGDatabase.BGFieldInt _NumberInKnife
	{
		get
		{
			if(_ufle12jhs77_NumberInKnife==null || _ufle12jhs77_NumberInKnife.IsDeleted) _ufle12jhs77_NumberInKnife=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5504265167041958856,4753984008469960577));
			return _ufle12jhs77_NumberInKnife;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_NumberOutKnife;
	public static BansheeGz.BGDatabase.BGFieldInt _NumberOutKnife
	{
		get
		{
			if(_ufle12jhs77_NumberOutKnife==null || _ufle12jhs77_NumberOutKnife.IsDeleted) _ufle12jhs77_NumberOutKnife=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5513687216932519006,9340408785649721778));
			return _ufle12jhs77_NumberOutKnife;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_MaxRotateSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _MaxRotateSpeed
	{
		get
		{
			if(_ufle12jhs77_MaxRotateSpeed==null || _ufle12jhs77_MaxRotateSpeed.IsDeleted) _ufle12jhs77_MaxRotateSpeed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5517307248504328305,10675720316524719528));
			return _ufle12jhs77_MaxRotateSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxNumberInKnife;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxNumberInKnife
	{
		get
		{
			if(_ufle12jhs77_MaxNumberInKnife==null || _ufle12jhs77_MaxNumberInKnife.IsDeleted) _ufle12jhs77_MaxNumberInKnife=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5000077160874881881,5320175725518998183));
			return _ufle12jhs77_MaxNumberInKnife;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxNumberOutKnife;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxNumberOutKnife
	{
		get
		{
			if(_ufle12jhs77_MaxNumberOutKnife==null || _ufle12jhs77_MaxNumberOutKnife.IsDeleted) _ufle12jhs77_MaxNumberOutKnife=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4775150290879627023,3899573162073622670));
			return _ufle12jhs77_MaxNumberOutKnife;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Hero() : base(MetaDefault)
	{
	}
	private DB_Hero(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Hero(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Hero(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Hero FindEntity(Predicate<DB_Hero> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Hero) entity)) as DB_Hero;
	}
	public static List<DB_Hero> FindEntities(Predicate<DB_Hero> filter, List<DB_Hero> result=null, Comparison<DB_Hero> sort=null)
	{
		result = result ?? new List<DB_Hero>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Hero) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Hero) e1, (DB_Hero) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Hero) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Hero> action, Predicate<DB_Hero> filter=null, Comparison<DB_Hero> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Hero) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Hero) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Hero)e1,(DB_Hero)e2));
	}
	public static DB_Hero GetEntity(BGId entityId)
	{
		return (DB_Hero) MetaDefault.GetEntity(entityId);
	}
	public static DB_Hero GetEntity(int index)
	{
		return (DB_Hero) MetaDefault[index];
	}
	public static DB_Hero GetEntity(string entityName)
	{
		return (DB_Hero) MetaDefault.GetEntity(entityName);
	}
	public static DB_Hero NewEntity()
	{
		return (DB_Hero) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Zone : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Zone(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Zone(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5395059615129796082,8148408213107532170));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 IdZone
	{
		get
		{
			return _IdZone[Index];
		}
		set
		{
			_IdZone[Index] = value;
		}
	}
	public System.Int32 IdLevel
	{
		get
		{
			return _IdLevel[Index];
		}
		set
		{
			_IdLevel[Index] = value;
		}
	}
	public System.Int32 Map
	{
		get
		{
			return _Map[Index];
		}
		set
		{
			_Map[Index] = value;
		}
	}
	public System.String Mission
	{
		get
		{
			return _Mission[Index];
		}
		set
		{
			_Mission[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.String> Reward
	{
		get
		{
			return _Reward[Index];
		}
		set
		{
			_Reward[Index] = value;
		}
	}
	public System.Single LimitHp
	{
		get
		{
			return _LimitHp[Index];
		}
		set
		{
			_LimitHp[Index] = value;
		}
	}
	public System.Single SubtractDmg
	{
		get
		{
			return _SubtractDmg[Index];
		}
		set
		{
			_SubtractDmg[Index] = value;
		}
	}
	public System.Int32 IdWave
	{
		get
		{
			return _IdWave[Index];
		}
		set
		{
			_IdWave[Index] = value;
		}
	}
	public System.Int32 MaxAmount
	{
		get
		{
			return _MaxAmount[Index];
		}
		set
		{
			_MaxAmount[Index] = value;
		}
	}
	public System.Single Delay
	{
		get
		{
			return _Delay[Index];
		}
		set
		{
			_Delay[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> IdEnemy
	{
		get
		{
			return _IdEnemy[Index];
		}
		set
		{
			_IdEnemy[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> AmountSpawn
	{
		get
		{
			return _AmountSpawn[Index];
		}
		set
		{
			_AmountSpawn[Index] = value;
		}
	}
	public System.Single IntervalSpawn
	{
		get
		{
			return _IntervalSpawn[Index];
		}
		set
		{
			_IntervalSpawn[Index] = value;
		}
	}
	public System.Single HpBounus
	{
		get
		{
			return _HpBounus[Index];
		}
		set
		{
			_HpBounus[Index] = value;
		}
	}
	public System.Single DmgBounus
	{
		get
		{
			return _DmgBounus[Index];
		}
		set
		{
			_DmgBounus[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Double> LimitDrop
	{
		get
		{
			return _LimitDrop[Index];
		}
		set
		{
			_LimitDrop[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Double> RateDrop
	{
		get
		{
			return _RateDrop[Index];
		}
		set
		{
			_RateDrop[Index] = value;
		}
	}
	public System.Int32 MaxDrop
	{
		get
		{
			return _MaxDrop[Index];
		}
		set
		{
			_MaxDrop[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5417732272661039184,8190823486705015194));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IdZone;
	public static BansheeGz.BGDatabase.BGFieldInt _IdZone
	{
		get
		{
			if(_ufle12jhs77_IdZone==null || _ufle12jhs77_IdZone.IsDeleted) _ufle12jhs77_IdZone=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5471058697827311326,12028742499983550130));
			return _ufle12jhs77_IdZone;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IdLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _IdLevel
	{
		get
		{
			if(_ufle12jhs77_IdLevel==null || _ufle12jhs77_IdLevel.IsDeleted) _ufle12jhs77_IdLevel=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5386575755754183469,3627739786687511718));
			return _ufle12jhs77_IdLevel;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Map;
	public static BansheeGz.BGDatabase.BGFieldInt _Map
	{
		get
		{
			if(_ufle12jhs77_Map==null || _ufle12jhs77_Map.IsDeleted) _ufle12jhs77_Map=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4924993432035991663,10424198567275303315));
			return _ufle12jhs77_Map;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Mission;
	public static BansheeGz.BGDatabase.BGFieldString _Mission
	{
		get
		{
			if(_ufle12jhs77_Mission==null || _ufle12jhs77_Mission.IsDeleted) _ufle12jhs77_Mission=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5400074240772969303,3062793736691259834));
			return _ufle12jhs77_Mission;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_Reward;
	public static BansheeGz.BGDatabase.BGFieldListString _Reward
	{
		get
		{
			if(_ufle12jhs77_Reward==null || _ufle12jhs77_Reward.IsDeleted) _ufle12jhs77_Reward=(BansheeGz.BGDatabase.BGFieldListString) MetaDefault.GetField(new BGId(4683770891369031504,2301421639318518164));
			return _ufle12jhs77_Reward;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_LimitHp;
	public static BansheeGz.BGDatabase.BGFieldFloat _LimitHp
	{
		get
		{
			if(_ufle12jhs77_LimitHp==null || _ufle12jhs77_LimitHp.IsDeleted) _ufle12jhs77_LimitHp=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5552769787957323811,18333898616131108270));
			return _ufle12jhs77_LimitHp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_SubtractDmg;
	public static BansheeGz.BGDatabase.BGFieldFloat _SubtractDmg
	{
		get
		{
			if(_ufle12jhs77_SubtractDmg==null || _ufle12jhs77_SubtractDmg.IsDeleted) _ufle12jhs77_SubtractDmg=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4723982123231121549,7427673108613348539));
			return _ufle12jhs77_SubtractDmg;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IdWave;
	public static BansheeGz.BGDatabase.BGFieldInt _IdWave
	{
		get
		{
			if(_ufle12jhs77_IdWave==null || _ufle12jhs77_IdWave.IsDeleted) _ufle12jhs77_IdWave=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4798106634181508282,17227086115347031688));
			return _ufle12jhs77_IdWave;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxAmount;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxAmount
	{
		get
		{
			if(_ufle12jhs77_MaxAmount==null || _ufle12jhs77_MaxAmount.IsDeleted) _ufle12jhs77_MaxAmount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4660557259893232338,18064461367445982630));
			return _ufle12jhs77_MaxAmount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Delay;
	public static BansheeGz.BGDatabase.BGFieldFloat _Delay
	{
		get
		{
			if(_ufle12jhs77_Delay==null || _ufle12jhs77_Delay.IsDeleted) _ufle12jhs77_Delay=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5495881664803608426,9864575394260294819));
			return _ufle12jhs77_Delay;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_IdEnemy;
	public static BansheeGz.BGDatabase.BGFieldListInt _IdEnemy
	{
		get
		{
			if(_ufle12jhs77_IdEnemy==null || _ufle12jhs77_IdEnemy.IsDeleted) _ufle12jhs77_IdEnemy=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(5353937586087179664,2354831471244258490));
			return _ufle12jhs77_IdEnemy;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_AmountSpawn;
	public static BansheeGz.BGDatabase.BGFieldListInt _AmountSpawn
	{
		get
		{
			if(_ufle12jhs77_AmountSpawn==null || _ufle12jhs77_AmountSpawn.IsDeleted) _ufle12jhs77_AmountSpawn=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(5657799860354532321,3471269833561608097));
			return _ufle12jhs77_AmountSpawn;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IntervalSpawn;
	public static BansheeGz.BGDatabase.BGFieldFloat _IntervalSpawn
	{
		get
		{
			if(_ufle12jhs77_IntervalSpawn==null || _ufle12jhs77_IntervalSpawn.IsDeleted) _ufle12jhs77_IntervalSpawn=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4810199210118034003,5286557153644806067));
			return _ufle12jhs77_IntervalSpawn;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HpBounus;
	public static BansheeGz.BGDatabase.BGFieldFloat _HpBounus
	{
		get
		{
			if(_ufle12jhs77_HpBounus==null || _ufle12jhs77_HpBounus.IsDeleted) _ufle12jhs77_HpBounus=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4626999813726257906,5200853879730870173));
			return _ufle12jhs77_HpBounus;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DmgBounus;
	public static BansheeGz.BGDatabase.BGFieldFloat _DmgBounus
	{
		get
		{
			if(_ufle12jhs77_DmgBounus==null || _ufle12jhs77_DmgBounus.IsDeleted) _ufle12jhs77_DmgBounus=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5314806560631806529,12108068938206189448));
			return _ufle12jhs77_DmgBounus;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListDouble _ufle12jhs77_LimitDrop;
	public static BansheeGz.BGDatabase.BGFieldListDouble _LimitDrop
	{
		get
		{
			if(_ufle12jhs77_LimitDrop==null || _ufle12jhs77_LimitDrop.IsDeleted) _ufle12jhs77_LimitDrop=(BansheeGz.BGDatabase.BGFieldListDouble) MetaDefault.GetField(new BGId(5017020962110681537,10000119244014165128));
			return _ufle12jhs77_LimitDrop;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListDouble _ufle12jhs77_RateDrop;
	public static BansheeGz.BGDatabase.BGFieldListDouble _RateDrop
	{
		get
		{
			if(_ufle12jhs77_RateDrop==null || _ufle12jhs77_RateDrop.IsDeleted) _ufle12jhs77_RateDrop=(BansheeGz.BGDatabase.BGFieldListDouble) MetaDefault.GetField(new BGId(4837226141471639115,18245927474366031800));
			return _ufle12jhs77_RateDrop;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxDrop;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxDrop
	{
		get
		{
			if(_ufle12jhs77_MaxDrop==null || _ufle12jhs77_MaxDrop.IsDeleted) _ufle12jhs77_MaxDrop=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4893524194844736932,17669276308666368167));
			return _ufle12jhs77_MaxDrop;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Zone() : base(MetaDefault)
	{
	}
	private DB_Zone(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Zone(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Zone(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Zone FindEntity(Predicate<DB_Zone> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Zone) entity)) as DB_Zone;
	}
	public static List<DB_Zone> FindEntities(Predicate<DB_Zone> filter, List<DB_Zone> result=null, Comparison<DB_Zone> sort=null)
	{
		result = result ?? new List<DB_Zone>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Zone) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Zone) e1, (DB_Zone) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Zone) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Zone> action, Predicate<DB_Zone> filter=null, Comparison<DB_Zone> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Zone) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Zone) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Zone)e1,(DB_Zone)e2));
	}
	public static DB_Zone GetEntity(BGId entityId)
	{
		return (DB_Zone) MetaDefault.GetEntity(entityId);
	}
	public static DB_Zone GetEntity(int index)
	{
		return (DB_Zone) MetaDefault[index];
	}
	public static DB_Zone GetEntity(string entityName)
	{
		return (DB_Zone) MetaDefault.GetEntity(entityName);
	}
	public static DB_Zone NewEntity()
	{
		return (DB_Zone) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Ability : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Ability(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Ability(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4650093488468725007,3762703772729508765));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Index
	{
		get
		{
			return _Index[Index];
		}
		set
		{
			_Index[Index] = value;
		}
	}
	public System.Int32 Id
	{
		get
		{
			return _Id[Index];
		}
		set
		{
			_Id[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.String Rarity
	{
		get
		{
			return _Rarity[Index];
		}
		set
		{
			_Rarity[Index] = value;
		}
	}
	public System.Int32 Max
	{
		get
		{
			return _Max[Index];
		}
		set
		{
			_Max[Index] = value;
		}
	}
	public System.Int32 Unlock
	{
		get
		{
			return _Unlock[Index];
		}
		set
		{
			_Unlock[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> Show
	{
		get
		{
			return _Show[Index];
		}
		set
		{
			_Show[Index] = value;
		}
	}
	public System.Single Delay
	{
		get
		{
			return _Delay[Index];
		}
		set
		{
			_Delay[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Single Base
	{
		get
		{
			return _Base[Index];
		}
		set
		{
			_Base[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5292903275724238636,15556642435463696777));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Index
	{
		get
		{
			if(_ufle12jhs77_Index==null || _ufle12jhs77_Index.IsDeleted) _ufle12jhs77_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5375150173101976215,15904707592641789838));
			return _ufle12jhs77_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldInt _Id
	{
		get
		{
			if(_ufle12jhs77_Id==null || _ufle12jhs77_Id.IsDeleted) _ufle12jhs77_Id=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5366723391749253375,3445853588398289337));
			return _ufle12jhs77_Id;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4916902982319012159,3779842169748643480));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Rarity;
	public static BansheeGz.BGDatabase.BGFieldString _Rarity
	{
		get
		{
			if(_ufle12jhs77_Rarity==null || _ufle12jhs77_Rarity.IsDeleted) _ufle12jhs77_Rarity=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5020563299747736907,8980362788831526827));
			return _ufle12jhs77_Rarity;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Max;
	public static BansheeGz.BGDatabase.BGFieldInt _Max
	{
		get
		{
			if(_ufle12jhs77_Max==null || _ufle12jhs77_Max.IsDeleted) _ufle12jhs77_Max=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5003420584750221159,442515704697963397));
			return _ufle12jhs77_Max;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Unlock;
	public static BansheeGz.BGDatabase.BGFieldInt _Unlock
	{
		get
		{
			if(_ufle12jhs77_Unlock==null || _ufle12jhs77_Unlock.IsDeleted) _ufle12jhs77_Unlock=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4899376468434091646,6073920210638253725));
			return _ufle12jhs77_Unlock;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_Show;
	public static BansheeGz.BGDatabase.BGFieldListInt _Show
	{
		get
		{
			if(_ufle12jhs77_Show==null || _ufle12jhs77_Show.IsDeleted) _ufle12jhs77_Show=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(5641175663308227813,7774122028520055977));
			return _ufle12jhs77_Show;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Delay;
	public static BansheeGz.BGDatabase.BGFieldFloat _Delay
	{
		get
		{
			if(_ufle12jhs77_Delay==null || _ufle12jhs77_Delay.IsDeleted) _ufle12jhs77_Delay=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4925511201967465297,6071310961271959487));
			return _ufle12jhs77_Delay;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5698789498869385033,16024830314835676056));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Base;
	public static BansheeGz.BGDatabase.BGFieldFloat _Base
	{
		get
		{
			if(_ufle12jhs77_Base==null || _ufle12jhs77_Base.IsDeleted) _ufle12jhs77_Base=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4623900438745562331,10474832964475719075));
			return _ufle12jhs77_Base;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Ability() : base(MetaDefault)
	{
	}
	private DB_Ability(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Ability(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Ability(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Ability FindEntity(Predicate<DB_Ability> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Ability) entity)) as DB_Ability;
	}
	public static List<DB_Ability> FindEntities(Predicate<DB_Ability> filter, List<DB_Ability> result=null, Comparison<DB_Ability> sort=null)
	{
		result = result ?? new List<DB_Ability>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Ability) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Ability) e1, (DB_Ability) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Ability) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Ability> action, Predicate<DB_Ability> filter=null, Comparison<DB_Ability> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Ability) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Ability) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Ability)e1,(DB_Ability)e2));
	}
	public static DB_Ability GetEntity(BGId entityId)
	{
		return (DB_Ability) MetaDefault.GetEntity(entityId);
	}
	public static DB_Ability GetEntity(int index)
	{
		return (DB_Ability) MetaDefault[index];
	}
	public static DB_Ability GetEntity(string entityName)
	{
		return (DB_Ability) MetaDefault.GetEntity(entityName);
	}
	public static DB_Ability NewEntity()
	{
		return (DB_Ability) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Gold : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Gold(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Gold(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5466522096146980692,4009930922487094683));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Id
	{
		get
		{
			return _Id[Index];
		}
		set
		{
			_Id[Index] = value;
		}
	}
	public System.Int32 Price
	{
		get
		{
			return _Price[Index];
		}
		set
		{
			_Price[Index] = value;
		}
	}
	public System.Int32 Quantity
	{
		get
		{
			return _Quantity[Index];
		}
		set
		{
			_Quantity[Index] = value;
		}
	}
	public System.String Tag
	{
		get
		{
			return _Tag[Index];
		}
		set
		{
			_Tag[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5246439484262513129,15687850629430179473));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldInt _Id
	{
		get
		{
			if(_ufle12jhs77_Id==null || _ufle12jhs77_Id.IsDeleted) _ufle12jhs77_Id=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5752331259850398647,17007127848045428107));
			return _ufle12jhs77_Id;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price
	{
		get
		{
			if(_ufle12jhs77_Price==null || _ufle12jhs77_Price.IsDeleted) _ufle12jhs77_Price=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4634448161512267617,3346808983517766587));
			return _ufle12jhs77_Price;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Quantity;
	public static BansheeGz.BGDatabase.BGFieldInt _Quantity
	{
		get
		{
			if(_ufle12jhs77_Quantity==null || _ufle12jhs77_Quantity.IsDeleted) _ufle12jhs77_Quantity=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5409011694909788371,1744404224987473051));
			return _ufle12jhs77_Quantity;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Tag;
	public static BansheeGz.BGDatabase.BGFieldString _Tag
	{
		get
		{
			if(_ufle12jhs77_Tag==null || _ufle12jhs77_Tag.IsDeleted) _ufle12jhs77_Tag=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4947973991252236869,4244292254008081058));
			return _ufle12jhs77_Tag;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Gold() : base(MetaDefault)
	{
	}
	private DB_Gold(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Gold(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Gold(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Gold FindEntity(Predicate<DB_Gold> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Gold) entity)) as DB_Gold;
	}
	public static List<DB_Gold> FindEntities(Predicate<DB_Gold> filter, List<DB_Gold> result=null, Comparison<DB_Gold> sort=null)
	{
		result = result ?? new List<DB_Gold>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Gold) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Gold) e1, (DB_Gold) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Gold) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Gold> action, Predicate<DB_Gold> filter=null, Comparison<DB_Gold> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Gold) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Gold) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Gold)e1,(DB_Gold)e2));
	}
	public static DB_Gold GetEntity(BGId entityId)
	{
		return (DB_Gold) MetaDefault.GetEntity(entityId);
	}
	public static DB_Gold GetEntity(int index)
	{
		return (DB_Gold) MetaDefault[index];
	}
	public static DB_Gold GetEntity(string entityName)
	{
		return (DB_Gold) MetaDefault.GetEntity(entityName);
	}
	public static DB_Gold NewEntity()
	{
		return (DB_Gold) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Gem : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Gem(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Gem(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4846369319627444503,6672667265835997868));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Id
	{
		get
		{
			return _Id[Index];
		}
		set
		{
			_Id[Index] = value;
		}
	}
	public System.Int32 Price
	{
		get
		{
			return _Price[Index];
		}
		set
		{
			_Price[Index] = value;
		}
	}
	public System.Int32 Quantity
	{
		get
		{
			return _Quantity[Index];
		}
		set
		{
			_Quantity[Index] = value;
		}
	}
	public System.String Tag
	{
		get
		{
			return _Tag[Index];
		}
		set
		{
			_Tag[Index] = value;
		}
	}
	public System.String Product
	{
		get
		{
			return _Product[Index];
		}
		set
		{
			_Product[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5549645799897785567,6346624177120861618));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldInt _Id
	{
		get
		{
			if(_ufle12jhs77_Id==null || _ufle12jhs77_Id.IsDeleted) _ufle12jhs77_Id=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5026063339101478232,3278795298597828512));
			return _ufle12jhs77_Id;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price
	{
		get
		{
			if(_ufle12jhs77_Price==null || _ufle12jhs77_Price.IsDeleted) _ufle12jhs77_Price=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5349559871645127643,15414644243042697096));
			return _ufle12jhs77_Price;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Quantity;
	public static BansheeGz.BGDatabase.BGFieldInt _Quantity
	{
		get
		{
			if(_ufle12jhs77_Quantity==null || _ufle12jhs77_Quantity.IsDeleted) _ufle12jhs77_Quantity=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4951797905075191519,8072190871392578451));
			return _ufle12jhs77_Quantity;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Tag;
	public static BansheeGz.BGDatabase.BGFieldString _Tag
	{
		get
		{
			if(_ufle12jhs77_Tag==null || _ufle12jhs77_Tag.IsDeleted) _ufle12jhs77_Tag=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4724971858049728154,10045890760133615753));
			return _ufle12jhs77_Tag;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Product;
	public static BansheeGz.BGDatabase.BGFieldString _Product
	{
		get
		{
			if(_ufle12jhs77_Product==null || _ufle12jhs77_Product.IsDeleted) _ufle12jhs77_Product=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5432696161464470190,9354210471164621472));
			return _ufle12jhs77_Product;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Gem() : base(MetaDefault)
	{
	}
	private DB_Gem(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Gem(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Gem(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Gem FindEntity(Predicate<DB_Gem> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Gem) entity)) as DB_Gem;
	}
	public static List<DB_Gem> FindEntities(Predicate<DB_Gem> filter, List<DB_Gem> result=null, Comparison<DB_Gem> sort=null)
	{
		result = result ?? new List<DB_Gem>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Gem) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Gem) e1, (DB_Gem) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Gem) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Gem> action, Predicate<DB_Gem> filter=null, Comparison<DB_Gem> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Gem) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Gem) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Gem)e1,(DB_Gem)e2));
	}
	public static DB_Gem GetEntity(BGId entityId)
	{
		return (DB_Gem) MetaDefault.GetEntity(entityId);
	}
	public static DB_Gem GetEntity(int index)
	{
		return (DB_Gem) MetaDefault[index];
	}
	public static DB_Gem GetEntity(string entityName)
	{
		return (DB_Gem) MetaDefault.GetEntity(entityName);
	}
	public static DB_Gem NewEntity()
	{
		return (DB_Gem) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Chest : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Chest(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Chest(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5721922601550541580,10915162962351161266));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Int32 Cost
	{
		get
		{
			return _Cost[Index];
		}
		set
		{
			_Cost[Index] = value;
		}
	}
	public System.Int64 TimeFree
	{
		get
		{
			return _TimeFree[Index];
		}
		set
		{
			_TimeFree[Index] = value;
		}
	}
	public System.Int32 MaxSpecial
	{
		get
		{
			return _MaxSpecial[Index];
		}
		set
		{
			_MaxSpecial[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Single> Rarity
	{
		get
		{
			return _Rarity[Index];
		}
		set
		{
			_Rarity[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Single> Equipment
	{
		get
		{
			return _Equipment[Index];
		}
		set
		{
			_Equipment[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4756830751008420864,8741533492729939130));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5634019724785601133,1378135137218242495));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _Cost
	{
		get
		{
			if(_ufle12jhs77_Cost==null || _ufle12jhs77_Cost.IsDeleted) _ufle12jhs77_Cost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4678086116404731466,10765550469086853802));
			return _ufle12jhs77_Cost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldLong _ufle12jhs77_TimeFree;
	public static BansheeGz.BGDatabase.BGFieldLong _TimeFree
	{
		get
		{
			if(_ufle12jhs77_TimeFree==null || _ufle12jhs77_TimeFree.IsDeleted) _ufle12jhs77_TimeFree=(BansheeGz.BGDatabase.BGFieldLong) MetaDefault.GetField(new BGId(5683338580564404665,9322009647826136215));
			return _ufle12jhs77_TimeFree;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxSpecial;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxSpecial
	{
		get
		{
			if(_ufle12jhs77_MaxSpecial==null || _ufle12jhs77_MaxSpecial.IsDeleted) _ufle12jhs77_MaxSpecial=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4959528502832749130,3027436988299403656));
			return _ufle12jhs77_MaxSpecial;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListFloat _ufle12jhs77_Rarity;
	public static BansheeGz.BGDatabase.BGFieldListFloat _Rarity
	{
		get
		{
			if(_ufle12jhs77_Rarity==null || _ufle12jhs77_Rarity.IsDeleted) _ufle12jhs77_Rarity=(BansheeGz.BGDatabase.BGFieldListFloat) MetaDefault.GetField(new BGId(5684798573075765377,3735804696360745870));
			return _ufle12jhs77_Rarity;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListFloat _ufle12jhs77_Equipment;
	public static BansheeGz.BGDatabase.BGFieldListFloat _Equipment
	{
		get
		{
			if(_ufle12jhs77_Equipment==null || _ufle12jhs77_Equipment.IsDeleted) _ufle12jhs77_Equipment=(BansheeGz.BGDatabase.BGFieldListFloat) MetaDefault.GetField(new BGId(4648225147019112755,11581775029147637141));
			return _ufle12jhs77_Equipment;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Chest() : base(MetaDefault)
	{
	}
	private DB_Chest(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Chest(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Chest(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Chest FindEntity(Predicate<DB_Chest> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Chest) entity)) as DB_Chest;
	}
	public static List<DB_Chest> FindEntities(Predicate<DB_Chest> filter, List<DB_Chest> result=null, Comparison<DB_Chest> sort=null)
	{
		result = result ?? new List<DB_Chest>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Chest) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Chest) e1, (DB_Chest) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Chest) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Chest> action, Predicate<DB_Chest> filter=null, Comparison<DB_Chest> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Chest) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Chest) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Chest)e1,(DB_Chest)e2));
	}
	public static DB_Chest GetEntity(BGId entityId)
	{
		return (DB_Chest) MetaDefault.GetEntity(entityId);
	}
	public static DB_Chest GetEntity(int index)
	{
		return (DB_Chest) MetaDefault[index];
	}
	public static DB_Chest GetEntity(string entityName)
	{
		return (DB_Chest) MetaDefault.GetEntity(entityName);
	}
	public static DB_Chest NewEntity()
	{
		return (DB_Chest) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Equipment : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Equipment(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Equipment(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4620997990506517625,12589561343656782981));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Id
	{
		get
		{
			return _Id[Index];
		}
		set
		{
			_Id[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Single Coefficient
	{
		get
		{
			return _Coefficient[Index];
		}
		set
		{
			_Coefficient[Index] = value;
		}
	}
	public System.String Main
	{
		get
		{
			return _Main[Index];
		}
		set
		{
			_Main[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.String> Bonus1
	{
		get
		{
			return _Bonus1[Index];
		}
		set
		{
			_Bonus1[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.String> Bonus2
	{
		get
		{
			return _Bonus2[Index];
		}
		set
		{
			_Bonus2[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.String> Bonus3
	{
		get
		{
			return _Bonus3[Index];
		}
		set
		{
			_Bonus3[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4693828966655772490,15706577380357550208));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldInt _Id
	{
		get
		{
			if(_ufle12jhs77_Id==null || _ufle12jhs77_Id.IsDeleted) _ufle12jhs77_Id=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5396563420235679032,9689374720515664532));
			return _ufle12jhs77_Id;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5062633677547177312,15931740571302591363));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Coefficient;
	public static BansheeGz.BGDatabase.BGFieldFloat _Coefficient
	{
		get
		{
			if(_ufle12jhs77_Coefficient==null || _ufle12jhs77_Coefficient.IsDeleted) _ufle12jhs77_Coefficient=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5451068725573495467,6594885513659143089));
			return _ufle12jhs77_Coefficient;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Main;
	public static BansheeGz.BGDatabase.BGFieldString _Main
	{
		get
		{
			if(_ufle12jhs77_Main==null || _ufle12jhs77_Main.IsDeleted) _ufle12jhs77_Main=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5377485603902781100,16084695348355057282));
			return _ufle12jhs77_Main;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_Bonus1;
	public static BansheeGz.BGDatabase.BGFieldListString _Bonus1
	{
		get
		{
			if(_ufle12jhs77_Bonus1==null || _ufle12jhs77_Bonus1.IsDeleted) _ufle12jhs77_Bonus1=(BansheeGz.BGDatabase.BGFieldListString) MetaDefault.GetField(new BGId(5151413997400632820,1920045231708279219));
			return _ufle12jhs77_Bonus1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_Bonus2;
	public static BansheeGz.BGDatabase.BGFieldListString _Bonus2
	{
		get
		{
			if(_ufle12jhs77_Bonus2==null || _ufle12jhs77_Bonus2.IsDeleted) _ufle12jhs77_Bonus2=(BansheeGz.BGDatabase.BGFieldListString) MetaDefault.GetField(new BGId(5488211950126467803,13413845113320233619));
			return _ufle12jhs77_Bonus2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_Bonus3;
	public static BansheeGz.BGDatabase.BGFieldListString _Bonus3
	{
		get
		{
			if(_ufle12jhs77_Bonus3==null || _ufle12jhs77_Bonus3.IsDeleted) _ufle12jhs77_Bonus3=(BansheeGz.BGDatabase.BGFieldListString) MetaDefault.GetField(new BGId(5116646885262040116,4662915141269837982));
			return _ufle12jhs77_Bonus3;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Equipment() : base(MetaDefault)
	{
	}
	private DB_Equipment(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Equipment(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Equipment(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Equipment FindEntity(Predicate<DB_Equipment> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Equipment) entity)) as DB_Equipment;
	}
	public static List<DB_Equipment> FindEntities(Predicate<DB_Equipment> filter, List<DB_Equipment> result=null, Comparison<DB_Equipment> sort=null)
	{
		result = result ?? new List<DB_Equipment>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Equipment) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Equipment) e1, (DB_Equipment) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Equipment) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Equipment> action, Predicate<DB_Equipment> filter=null, Comparison<DB_Equipment> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Equipment) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Equipment) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Equipment)e1,(DB_Equipment)e2));
	}
	public static DB_Equipment GetEntity(BGId entityId)
	{
		return (DB_Equipment) MetaDefault.GetEntity(entityId);
	}
	public static DB_Equipment GetEntity(int index)
	{
		return (DB_Equipment) MetaDefault[index];
	}
	public static DB_Equipment GetEntity(string entityName)
	{
		return (DB_Equipment) MetaDefault.GetEntity(entityName);
	}
	public static DB_Equipment NewEntity()
	{
		return (DB_Equipment) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class DB_Rarity : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new DB_Rarity(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new DB_Rarity(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5709729931330816426,17236292293033224088));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String Type
	{
		get
		{
			return _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Int32 Amount
	{
		get
		{
			return _Amount[Index];
		}
		set
		{
			_Amount[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> Upgrade
	{
		get
		{
			return _Upgrade[Index];
		}
		set
		{
			_Upgrade[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4703088859273294516,12868889360180280223));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4953324747431767841,8469143373916312225));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Amount;
	public static BansheeGz.BGDatabase.BGFieldInt _Amount
	{
		get
		{
			if(_ufle12jhs77_Amount==null || _ufle12jhs77_Amount.IsDeleted) _ufle12jhs77_Amount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5389664704864544191,6794705317989185210));
			return _ufle12jhs77_Amount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_Upgrade;
	public static BansheeGz.BGDatabase.BGFieldListInt _Upgrade
	{
		get
		{
			if(_ufle12jhs77_Upgrade==null || _ufle12jhs77_Upgrade.IsDeleted) _ufle12jhs77_Upgrade=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(5691624155207784849,12501341877287437742));
			return _ufle12jhs77_Upgrade;
		}
	}
	private static readonly DB_General.Factory _factory0_PFS = new DB_General.Factory();
	private static readonly DB_Language.Factory _factory1_PFS = new DB_Language.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_Hero.Factory _factory3_PFS = new DB_Hero.Factory();
	private static readonly DB_Zone.Factory _factory4_PFS = new DB_Zone.Factory();
	private static readonly DB_Ability.Factory _factory5_PFS = new DB_Ability.Factory();
	private static readonly DB_Gold.Factory _factory6_PFS = new DB_Gold.Factory();
	private static readonly DB_Gem.Factory _factory7_PFS = new DB_Gem.Factory();
	private static readonly DB_Chest.Factory _factory8_PFS = new DB_Chest.Factory();
	private static readonly DB_Equipment.Factory _factory9_PFS = new DB_Equipment.Factory();
	private static readonly DB_Rarity.Factory _factory10_PFS = new DB_Rarity.Factory();
	private DB_Rarity() : base(MetaDefault)
	{
	}
	private DB_Rarity(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Rarity(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Rarity(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Rarity FindEntity(Predicate<DB_Rarity> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Rarity) entity)) as DB_Rarity;
	}
	public static List<DB_Rarity> FindEntities(Predicate<DB_Rarity> filter, List<DB_Rarity> result=null, Comparison<DB_Rarity> sort=null)
	{
		result = result ?? new List<DB_Rarity>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((DB_Rarity) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((DB_Rarity) e1, (DB_Rarity) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((DB_Rarity) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<DB_Rarity> action, Predicate<DB_Rarity> filter=null, Comparison<DB_Rarity> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Rarity) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Rarity) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Rarity)e1,(DB_Rarity)e2));
	}
	public static DB_Rarity GetEntity(BGId entityId)
	{
		return (DB_Rarity) MetaDefault.GetEntity(entityId);
	}
	public static DB_Rarity GetEntity(int index)
	{
		return (DB_Rarity) MetaDefault[index];
	}
	public static DB_Rarity GetEntity(string entityName)
	{
		return (DB_Rarity) MetaDefault.GetEntity(entityName);
	}
	public static DB_Rarity NewEntity()
	{
		return (DB_Rarity) MetaDefault.NewEntity();
	}
}
#pragma warning restore 414
